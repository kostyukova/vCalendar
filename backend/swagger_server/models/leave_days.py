# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LeaveDays(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, employee_id: int=None, leave_days: int=None, start_date: date=None, end_date: date=None):  # noqa: E501
        """LeaveDays - a model defined in Swagger

        :param id: The id of this LeaveDays.  # noqa: E501
        :type id: int
        :param employee_id: The employee_id of this LeaveDays.  # noqa: E501
        :type employee_id: int
        :param leave_days: The leave_days of this LeaveDays.  # noqa: E501
        :type leave_days: int
        :param start_date: The start_date of this LeaveDays.  # noqa: E501
        :type start_date: date
        :param end_date: The end_date of this LeaveDays.  # noqa: E501
        :type end_date: date
        """
        self.swagger_types = {
            'id': int,
            'employee_id': int,
            'leave_days': int,
            'start_date': date,
            'end_date': date
        }

        self.attribute_map = {
            'id': 'id',
            'employee_id': 'employee_id',
            'leave_days': 'leave_days',
            'start_date': 'start_date',
            'end_date': 'end_date'
        }

        self._id = id
        self._employee_id = employee_id
        self._leave_days = leave_days
        self._start_date = start_date
        self._end_date = end_date

    @classmethod
    def from_dict(cls, dikt) -> 'LeaveDays':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LeaveDays of this LeaveDays.  # noqa: E501
        :rtype: LeaveDays
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this LeaveDays.


        :return: The id of this LeaveDays.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this LeaveDays.


        :param id: The id of this LeaveDays.
        :type id: int
        """

        self._id = id

    @property
    def employee_id(self) -> int:
        """Gets the employee_id of this LeaveDays.


        :return: The employee_id of this LeaveDays.
        :rtype: int
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id: int):
        """Sets the employee_id of this LeaveDays.


        :param employee_id: The employee_id of this LeaveDays.
        :type employee_id: int
        """
        if employee_id is None:
            raise ValueError("Invalid value for `employee_id`, must not be `None`")  # noqa: E501

        self._employee_id = employee_id

    @property
    def leave_days(self) -> int:
        """Gets the leave_days of this LeaveDays.


        :return: The leave_days of this LeaveDays.
        :rtype: int
        """
        return self._leave_days

    @leave_days.setter
    def leave_days(self, leave_days: int):
        """Sets the leave_days of this LeaveDays.


        :param leave_days: The leave_days of this LeaveDays.
        :type leave_days: int
        """
        if leave_days is None:
            raise ValueError("Invalid value for `leave_days`, must not be `None`")  # noqa: E501

        self._leave_days = leave_days

    @property
    def start_date(self) -> date:
        """Gets the start_date of this LeaveDays.


        :return: The start_date of this LeaveDays.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: date):
        """Sets the start_date of this LeaveDays.


        :param start_date: The start_date of this LeaveDays.
        :type start_date: date
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")  # noqa: E501

        self._start_date = start_date

    @property
    def end_date(self) -> date:
        """Gets the end_date of this LeaveDays.


        :return: The end_date of this LeaveDays.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: date):
        """Sets the end_date of this LeaveDays.


        :param end_date: The end_date of this LeaveDays.
        :type end_date: date
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")  # noqa: E501

        self._end_date = end_date
